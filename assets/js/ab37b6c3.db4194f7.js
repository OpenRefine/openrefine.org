"use strict";(self.webpackChunkOpenRefine_Documentation=self.webpackChunkOpenRefine_Documentation||[]).push([[5824],{35139:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=n(64861),r=n(69018);const s={title:"Other distributions",description:"Tweaked versions of OpenRefine distributed by other vendors.",hide_table_of_contents:!0},o="Other distributions",a={type:"mdx",permalink:"/distributions",source:"@site/src/pages/distributions.md",title:"Other distributions",description:"Tweaked versions of OpenRefine distributed by other vendors.",frontMatter:{title:"Other distributions",description:"Tweaked versions of OpenRefine distributed by other vendors.",hide_table_of_contents:!0},unlisted:!1},d={},c=[];function h(e){const t={a:"a",h1:"h1",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"other-distributions",children:"Other distributions"}),"\n",(0,i.jsx)(t.p,{children:"The following distributions have been customized for a specific usage or integration with other technologies."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Distribution"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Authors"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://github.com/opendatatrentino/OpenDataRise",children:"OpenDataRise"})}),(0,i.jsx)(t.td,{children:"Tool to cleanse and semantify datasets from CKAN repositories. Based on OpenRefine."}),(0,i.jsx)(t.td,{children:"Open Data in Trentino"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://github.com/fusepoolP3/p3-batchrefine",children:"p3-batchrefine"})}),(0,i.jsx)(t.td,{children:"BatchRefine adds batch processing capabilities to OpenRefine and support multiple back end including spark"}),(0,i.jsx)(t.td,{children:"SpazioDati"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://github.com/andreybratus/RefineOnSpark",children:"RefineOnSpark"})}),(0,i.jsx)(t.td,{children:"RefineOnSpark is a driver program to run OpenRefine jobs on the Spark cluster"}),(0,i.jsx)(t.td,{children:"SpazioDati"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://github.com/RBGKew/Reconciliation-and-Matching-Framework",children:"Reconciliation-and-Matching-Framework"})}),(0,i.jsx)(t.td,{children:"A framework to allow the matching of string entities using customised sets of transformations and matchers, plus a tool to produce the necessary configurations and another to expose them as OpenRefine reconciliation services."}),(0,i.jsx)(t.td,{children:"RBGKew"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.ontotext.com/products/ontotext-refine/",children:"Ontotext Refine"})}),(0,i.jsx)(t.td,{children:"Ontotext Refine, previously called OntoRefine, is a closed-source data transformation tool based on OpenRefine. It can be used for converting tabular data to RDF using a visual mapper or SPARQL, exporting it as Turtle or importing it to a GraphDB repository directly, using SPARQL queries against a virtual endpoint of Refine data."}),(0,i.jsx)(t.td,{children:"Ontotext"})]})]})]})]})}function l(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},69018:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>o});var i=n(47768);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);